{"version":3,"sources":["components/Song.js","components/Player.js","components/LibrarySong.js","components/Library.js","data.js","components/Nav.js","App.js","index.js"],"names":["Song","currentSong","className","src","cover","alt","name","artist","Player","isPlaying","setIsPlaying","isEnded","songInfo","setSongInfo","audioRef","setCurrentSong","allSongs","setSongs","useEffect","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipSongHandler","direction","a","currentIndex","findIndex","prevSong","length","nextSong","current","play","currentTime","min","max","duration","value","type","onChange","e","newCurrentTime","target","onClick","size","icon","faAngleLeft","faRedo","faPause","faPlay","pause","faAngleRight","LibrarySong","songSelectHandler","selectedSong","filter","Library","songs","isLibraryOpen","setIsLibraryOpen","faTimes","chillHop","audio","color","uuidv4","Nav","faMusic","App","useState","data","setIsEnded","useRef","timeUpdateHandler","ended","songEndedHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bac3b2b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Song = ({currentSong}) => {\r\n    return ( \r\n        <div className=\"song-container\">\r\n            <img src={currentSong.cover} alt={currentSong.name}/>\r\n            <h2> {currentSong.name} </h2>\r\n            <h3> {currentSong.artist} </h3>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Song;","import React, { useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faPause,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faRedo,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({\r\n  isPlaying,\r\n  setIsPlaying,\r\n  isEnded,\r\n  songInfo,\r\n  setSongInfo,\r\n  audioRef,\r\n  currentSong,\r\n  setCurrentSong,\r\n  allSongs,\r\n  setSongs,\r\n}) => {\r\n\r\n    useEffect(() => {\r\n        //Mettre active à true\r\n        const newSongs = allSongs.map(song => {\r\n            if(song.id === currentSong.id){\r\n                return{\r\n                    ...song,\r\n                    active: true\r\n                }\r\n            }else{\r\n                return{\r\n                    ...song,\r\n                    active: false\r\n                }\r\n            }\r\n        });\r\n        setSongs(newSongs);\r\n    }, [currentSong]) //Executer la fonction à chaque fois que le currentSong change\r\n\r\n  //Lecture\r\n  const playHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(false);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(true);\r\n    }\r\n  };\r\n  //Replay\r\n  const replayHandler = () => {\r\n    const newCurrentTime = 0.0;\r\n    setSongInfo({ ...songInfo, currentTime: newCurrentTime });\r\n    audioRef.current.play();\r\n    setIsPlaying(true);\r\n  };\r\n\r\n  //Formater l'affichage temps en minutes et secondes\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  //Gerer le déplacement du bouton pour avancer ou reculer à un moment donné\r\n  const grabHandler = (e) => {\r\n    const newCurrentTime = e.target.value;\r\n    audioRef.current.currentTime = newCurrentTime;\r\n    setSongInfo({ ...songInfo, currentTime: newCurrentTime });\r\n  };\r\n\r\n  //Gerer le son suivant / precedent\r\n  const skipSongHandler = async (direction) => {\r\n    let currentIndex = allSongs.findIndex(song => song.id === currentSong.id);\r\n    if(direction === 'skip-back'){\r\n        if(currentIndex!== 0){\r\n            let prevSong = currentIndex - 1;\r\n            await setCurrentSong(allSongs[prevSong]);\r\n        }\r\n        else if(currentIndex === 0){\r\n            let prevSong = allSongs.length - 1;\r\n            await setCurrentSong(allSongs[prevSong]);\r\n        }\r\n    }else if(direction === 'skip-forward'){\r\n        if(currentIndex !== allSongs.length - 1){\r\n            let nextSong = currentIndex + 1;\r\n            await setCurrentSong(allSongs[nextSong]);\r\n        }\r\n        else if(currentIndex === allSongs.length -1){\r\n            let nextSong = 0;\r\n            await setCurrentSong(allSongs[nextSong]);\r\n        }\r\n    }\r\n    if(isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  return (\r\n    <div className=\"player-container\">\r\n      <div className=\"time-control\">\r\n        <p> {getTime(songInfo.currentTime)} </p>\r\n        <input\r\n          min={0}\r\n          max={songInfo.duration || 0}\r\n          value={songInfo.currentTime}\r\n          type=\"range\"\r\n          onChange={grabHandler}\r\n        />\r\n        <p> { songInfo.duration ? getTime(songInfo.duration) : \"0:00\"} </p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          className=\"skip-back\"\r\n          onClick={() => skipSongHandler(\"skip-back\")}\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        {isEnded ? (\r\n          <FontAwesomeIcon\r\n            className=\"replay\"\r\n            size=\"2x\"\r\n            icon={faRedo}\r\n            onClick={replayHandler}\r\n          />\r\n        ) : (\r\n          <FontAwesomeIcon\r\n            className=\"play\"\r\n            size=\"2x\"\r\n            icon={isPlaying ? faPause : faPlay}\r\n            onClick={playHandler}\r\n          />\r\n        )}\r\n        <FontAwesomeIcon\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n          onClick={() => skipSongHandler(\"skip-forward\")}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from 'react'\r\n\r\nconst LibrarySong = ({ id, song, allSongs, setCurrentSong, setSongs, isPlaying, audioRef }) => {\r\n\r\n    const songSelectHandler = async () => {\r\n        const selectedSong = allSongs.filter((song) => song.id === id);\r\n        await setCurrentSong(selectedSong[0]);\r\n        //Mettre active à true\r\n        const newSongs = allSongs.map(song => {\r\n            if(song.id === id){\r\n                return{\r\n                    ...song,\r\n                    active: true\r\n                }\r\n            }else{\r\n                return{\r\n                    ...song,\r\n                    active: false\r\n                }\r\n            }\r\n        });\r\n\r\n        setSongs(newSongs);\r\n        if(isPlaying) audioRef.current.play();\r\n    }\r\n\r\n    return ( \r\n        <div className={`library-song ${song.active ? \"active\" : \"\"}`} onClick={songSelectHandler} >     \r\n            <img src={song.cover} alt={song.name}/>\r\n            <div className=\"song-description\">\r\n                <h3> {song.name} </h3>\r\n                <h4> {song.artist} </h4>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default LibrarySong;","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Library = ({ songs, setSongs, setCurrentSong, audioRef, isPlaying, isLibraryOpen, setIsLibraryOpen }) => {\r\n  return (\r\n    <div className={`library ${isLibraryOpen ? \"open\" : \"\"}`}>\r\n        <div className=\"title\">\r\n            <h2>Library</h2>\r\n            <FontAwesomeIcon className=\"close\"\r\n                onClick={() => setIsLibraryOpen(!isLibraryOpen)}\r\n                size=\"2x\"\r\n                icon={faTimes}\r\n            />\r\n        </div>\r\n      <div className=\"songs-container\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            isPlaying={isPlaying}\r\n            audioRef={audioRef}\r\n            key={song.id}\r\n            id={song.id}\r\n            song={song}\r\n            allSongs={songs}\r\n            setCurrentSong={setCurrentSong}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import { v4 as uuidv4 } from \"uuid\";\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    //ADD MORE HERE\n  ];\n}\n\nexport default chillHop;\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nconst Nav = ({ isLibraryOpen, setIsLibraryOpen }) => {\r\n    return ( \r\n        <nav>\r\n            <h1>Music Dealer</h1>\r\n            <button onClick={() => setIsLibraryOpen(!isLibraryOpen)} >\r\n                Library\r\n                <FontAwesomeIcon icon={faMusic} className=\"music-icon\"/>\r\n            </button>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default Nav;","import React, { useState, useRef } from \"react\";\nimport \"./styles/App.scss\";\nimport Song from \"./components/Song\";\nimport Player from \"./components/Player\";\nimport Library from \"./components/Library\";\nimport data from \"./data\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isEnded, setIsEnded] = useState(false);\n  const [isLibraryOpen, setIsLibraryOpen] = useState(false);\n\n  //States\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n  });\n\n  //Le Ref permet d'appeler des fcts prédéfinies d'une balise HTML équivalent du document.getElement\n  const audioRef = useRef(null);\n\n  //Recupérer le currentTime et la duration avec des propriétés html prédéfinies de la balise audio\n  const timeUpdateHandler = (e) => {\n    let currentTime = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo, currentTime, duration });\n    if (audioRef.current.ended) {\n      setIsEnded(true);\n    } else {\n      setIsEnded(false);\n    }\n  };\n\n  //Auto Skip\n  const songEndedHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    if (currentIndex !== songs.length - 1) {\n      let nextSong = currentIndex + 1;\n      await setCurrentSong(songs[nextSong]);\n    } else if (currentIndex === songs.length - 1) {\n      let nextSong = 0;\n      await setCurrentSong(songs[nextSong]);\n    }\n    if(isPlaying) audioRef.current.play();\n  };\n\n  return (\n    <div className={`App ${isLibraryOpen ? \"library-open\" : \"\"}`}>\n      <Nav isLibraryOpen={isLibraryOpen} setIsLibraryOpen={setIsLibraryOpen} />\n      <Song currentSong={currentSong} />\n      <Player\n        audioRef={audioRef}\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        allSongs={songs}\n        setSongs={setSongs}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        isEnded={isEnded}\n        setIsEnded={setIsEnded}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n      />\n      <Library\n        audioRef={audioRef}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        isLibraryOpen={isLibraryOpen}\n        setIsLibraryOpen={setIsLibraryOpen}\n      />\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndedHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}